/*
 * AppCommDefs.hpp
 *
 *  Created on: Feb 6, 2019
 *      Author: Labo
 */

#ifndef NEMEIO_APPCOMM_APPCOMMDEFS_HPP_
#define NEMEIO_APPCOMM_APPCOMMDEFS_HPP_

#include <stdint.h>

namespace AppCommDefs
{
enum class AppCommCmd : uint8_t
{
    SENDDATA = 0x00,
    KEEPALIVE = 0x01,
    // DEPRECATED_V1_APPLYCONFIG = 0x02
    // DEPRECATED_V1_CONFIGCHANGE = 0x03
    KEYPRESS = 0x04,
    // DEPRECATED_V1_CONFIGLIST = 0x05
    // DEPRECATED_V1_DELCONFIG = 0x06
    BLEDFU = 0x07,
    FORMATFLASH = 0x08,
    BATTERYINFORMATION = 0x09,
    VERSIONS = 0x0A,
    RCVDATA = 0x0B,
    SETCOMMMODE = 0x0C,
    SERIALNUMBER = 0x0D,
    KEYBOARDPARAMETERS = 0x0E,
    FACTORYRESET = 0x0F,
    SYSTEMRESET = 0x10,
    // DEPRECATED_TECHNICALERROR = 0x11,
    UPDATESTATUS = 0x12,
    VALIDATEUSERCONFIGURATION = 0x13,
    DELETELAYOUT = 0x14,
    APPLYLAYOUTCONFIG = 0x15,
    LAYOUTCONFIGCHANGED = 0x16,
    APPLYUSERCONFIGURATION = 0x17,
    VALIDATEFACTORYUSERCONFIGURATION = 0x18,
    DELETEFACTORYLAYOUT = 0x19,
    DELETEUSERCONFIGURATION = 0x1A,
    DELETEFACTORYUSERCONFIGURATION = 0x1B,

    /* TESTS BENCH --------------------- */
    /* test indexes shall start from higher free index to lower */
    BENCH_FUNCTIONAL_CHECKBATTERYPRESENT = 0x6F,
    BENCH_VALIDATE_FUNCTIONAL_TESTS = 0x70,
    BENCH_FUNCTIONAL_GETTESTBENCHID = 0x71,
    BENCH_FUNCTIONAL_SETTESTBENCHID = 0x72,
    BENCH_FUNCTIONAL_SETADVERTISING = 0x73,
    BENCH_FUNCTIONAL_GETPRESSEDKEYS = 0x74,
    BENCH_FUNCTIONAL_DISPLAYCHECKERBOARD = 0x75,
    BENCH_ELECTRICAL_CLEARSCREEN = 0x77,
    BENCH_COMMON_CHECKCOMPONENTS = 0x78,
    BENCH_COMMON_SETFRONTLIGHTPOWER = 0x79,
    BENCH_ELECTRICAL_GETBATTERY_STATUS = 0x7A,
    BENCH_COMMON_SETLED = 0x7B,
    BENCH_EXIT_ELECTRICAL_TESTS = 0x7C,
    /* TESTS BENCH --------------------- */

    /* RADIO TESTS */
    RADIO_TEST = 0x7D,
    /* PROVISIONING */
    PROVISIONING_MAC_SERIALNUMBER = 0x7E,
    //                                      0x7F,
    // Values > 0x7F are reserved because most significant bit (0x80) is used for response flag
};

enum SendDataID : uint8_t
{
    SENDDATAID_UNDEFINED = 0,
    // DEPRECATED_V1_SENDDATAID_FIRMWARE = 1,
    // DEPRECATED_V1_SENDDATAID_DEFAULTCONFIGURATION = 2,
    // DEPRECATED_V1_SENDDATAID_CONFIGURATION = 3,
    // DEPRECATED_V1_SENDDATAID_FACTORYWALLPAPER = 4,
    // DEPRECATED_V1_SENDDATAID_WALLPAPER = 5,
    // DEPRECATED_V1_SENDDATAID_INSTALLER = 6,
    // DEPRECATED_V1_SENDDATAID_DISPLAY_FIRWMARE = 7,
    SENDDATAID_FIRMWARE_PACKAGE = 8,
    SENDDATAID_USER_CONFIGURATION = 9,
    SENDDATAID_LAYOUT_CONFIGURATION = 10,
    SENDDATAID_LAYOUT = 11,
    SENDDATAID_FACTORY_USER_CONFIGURATION = 12,
    SENDDATAID_FACTORY_LAYOUT_CONFIGURATION = 13,
    SENDDATAID_FACTORY_LAYOUT = 14
};

enum AppCommErrCode : uint8_t
{
    APPCOMMERR_SUCCESS = 0,
    APPCOMMERR_UNEXPECTED,
    APPCOMMERR_MALFORMED_DATA,
    APPCOMMERR_FS,
    APPCOMMERR_STATE,
    APPCOMMERR_INVALID_CONTENT,
    APPCOMMERR_NOT_FOUND,
    APPCOMMERR_DRAW_CONFIGURATION,
    APPCOMMERR_PROTECTED_CONFIGURATION,
    APPCOMMERR_WRONG_COMM_MODE,
    APPCOMMERR_STREAMDATA_PROTOCOL,
    APPCOMMERR_NO_RESOURCE,
    APPCOMMERR_FWUPDATE_UPDATE,
    APPCOMMERR_FWUPDATE_NOFLASH,
    APPCOMMERR_FWUPDATE_WRITE,
    APPCOMMERR_FWUPDATE_VERSION,
    APPCOMMERR_BLE_CHIP_COMM_ERROR,
    APPCOMMERR_BATTERY_NOT_READY_ERROR,
    APPCOMMERR_BATTERY_FUEL_GAUGE_ERROR,
    APPCOMMERR_DISPLAY_NOT_READY,
};


enum CfgListCmdID : uint8_t
{
    CFGLISTCMDID_COUNT = 0,
    CFGLISTCMDID_NAME = 1,
};

enum ReceiveDataID : uint8_t
{
    RCVDATAID_UNDEFINED = 0,
    RCVDATAID_SYSFAILLOG = 1,
    // DEPRECATED_RCVDATAID_CONFIG_LIST = 2,
    RCVDATAID_USER_CONFIG = 3,
    RCVDATAID_LAYOUT_LIST = 4,
    RCVDATAID_FACTORY_USER_CONFIG = 5,
    RCVDATAID_FACTORY_LAYOUT_LIST = 6,
    RCVDATAID_USER_CONFIG_LIST = 7,
    RCVDATAID_FACTORY_USER_CONFIG_LIST = 8,
    RCVDATAID_TRACE_LOG = 9,
};
}; // namespace AppCommDefs

#endif /* NEMEIO_APPCOMM_APPCOMMDEFS_HPP_ */
